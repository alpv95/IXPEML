import unittest
import numpy as np
import sys, os
from util.net_test import NetTest

class Test(unittest.TestCase):

    def test_stokes_correction(self):
        """
        Test function stokes_correction that corrects angles for spurious modulation
        """
        t = NetTest(stokes_correct=2.0)

        angles_init = test_angles
        angles = t.stokes_correction(angles_init)
        self.assertEqual(len(angles_init), len(angles))
        self.assertEqual(angles_init[0].shape, angles[0].shape)
        self.assertEqual(angles_init[1].shape, angles[1].shape)



test_angles = (np.array([-1.69568813,  1.52383542,  0.11436079, -2.33490539, -2.34139657,
                        -0.20311953,  1.99005544,  2.80316353, -0.345972  , -1.08333325]),
                np.array([-1.70161116, -1.06606019,  0.10573584, -2.29058909,  2.51263261,
                        -0.52875185,  1.63517785,  0.34518996, -0.2710689 ,  2.52325845]),
                np.array([-1.6691401 ,  2.58979559,  0.27255619, -2.30075741, -2.63650227,
                        0.01864215,  1.91478741, -1.48228264,  0.58442283, -3.08939886]),
                np.array([2.19822931, 1.18758249, 2.07199478, 5.12554407, 2.88179469,
                    1.48755181, 6.97393894, 2.01956272, 1.14586294, 1.21349025]),
                np.array([1.19997001, 1.93148112, 0.64721596, 0.67416543, 1.17051804,
                    1.50997818, 0.84454066, 1.61987543, 1.83178878, 1.81910264]),
                np.array([[0.13333334, 0.23333333],
                            [0.16666667, 0.23333333],
                            [0.11666667, 0.23333333],
                            [0.25      , 0.33333334],
                            [0.25      , 0.2       ],
                            [0.11666667, 0.13333334],
                            [0.23333333, 0.1       ],
                            [0.18333334, 0.36666667],
                            [0.13333334, 0.13333334],
                            [0.13333334, 0.13333334]]),
                np.array([[0.13333334, 0.23333333],
                            [0.16666667, 0.23333333],
                            [0.11666667, 0.23333333],
                            [0.25      , 0.33333334],
                            [0.25      , 0.2       ],
                            [0.11666667, 0.13333334],
                            [0.23333333, 0.1       ],
                            [0.18333334, 0.36666667],
                            [0.13333334, 0.13333334],
                            [0.13333334, 0.13333334]]),
                np.array([[0.13333334, 0.23333333],
                            [0.16666667, 0.23333333],
                            [0.11666667, 0.23333333],
                            [0.25      , 0.33333334],
                            [0.25      , 0.2       ],
                            [0.11666667, 0.13333334],
                            [0.23333333, 0.1       ],
                            [0.18333334, 0.36666667],
                            [0.13333334, 0.13333334],
                            [0.13333334, 0.13333334]]),
                np.array([None]),
                np.array([0.42187503, 0.203125  , 0.890625  , 0.515625  , 0.79687512,
                    0.40625006, 0.53125   , 0.79687512, 0.046875  , 0.046875  ]),
                np.array([None,]),
                np.array([None,]), 
                np.array([[0.13333334, 0.23333333],
                            [0.16666667, 0.23333333],
                            [0.11666667, 0.23333333],
                            [0.25      , 0.33333334],
                            [0.25      , 0.2       ],
                            [0.11666667, 0.13333334],
                            [0.23333333, 0.1       ],
                            [0.18333334, 0.36666667],
                            [0.13333334, 0.13333334],
                            [0.13333334, 0.13333334]]),)

if __name__ == '__main__':
    unittest.main()
